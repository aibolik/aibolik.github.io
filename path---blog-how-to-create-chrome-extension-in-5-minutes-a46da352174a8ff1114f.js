webpackJsonp([0xfbd780aff9d0],{405:function(n,a){n.exports={data:{contentfulBlogPost:{title:"How To Create Chrome Extension In 5 Minutes",slug:"how-to-create-chrome-extension-in-5-minutes",publishDate:"1461013200000",content:[{__typename:"ContentfulBlogPostCopy",id:"c7cSQjvBFUQI44mUASIGgQC",copy:{childMarkdownRemark:{html:'<p><em>First of all</em>, what is a Chrome Extension? Let’s look what <a href="https://en.wikipedia.org/wiki/Google_Chrome_extension">Wikipedia says about it</a>.</p>\n<blockquote>\n<p>Google Chrome Extensions are browser extensions that modify the Google Chrome browser. These extensions are written using web technologies like HTML, JavaScript, and CSS. Google Chrome Extensions are downloadable through the Chrome Web Store.</p>\n</blockquote>\n<p><em>To be shortly</em>, using familiar for us technologies as <em>HTML</em>, <em>JavaScript</em> and <em>CSS</em> we can make some changes to Chrome browser(modifying content of a page, add some useful functionality and etc.).</p>\n<h3>What we will do</h3>\n<p>In this tutorial I will be creating simple Chrome Extension that tints to some opacity(that we set in settings) images that match our preferences. Here is what we will use</p>\n<ul>\n<li><a href="https://github.com/yeoman/generator-chrome-extension">Yeoman Chrome Extension Generator</a></li>\n<li>Atom(my favorite editor)</li>\n</ul>\n<h4>Step 0</h4>\n<p>In order to be able to debug and see your extensions, we need to enable developer mode in Chrome Extensions. Simple go to <em>Windows -> Extensions</em> and tick the <em>Developer mode on</em>. You can load extensions by choosing your extension folder, or they will be loaded automatically when you execute <code class="language-text">gulp watch</code> in Step 1.</p>'}}},{__typename:"ContentfulBlogPostImage",id:"c6YtZyom8OQWs8aKauWMug0",caption:"Enabling developer mode and loading unpacked extension",image:{resolutions:{src:"//images.ctfassets.net/w1fxlmsi3y1l/5j2raivNosQik4QQSkQwyG/6b2e928bf4be0740d381db1622f8c764/step0.png?w=400&q=100",srcSet:"//images.ctfassets.net/w1fxlmsi3y1l/5j2raivNosQik4QQSkQwyG/6b2e928bf4be0740d381db1622f8c764/step0.png?w=400&h=51&q=100 1x,\n//images.ctfassets.net/w1fxlmsi3y1l/5j2raivNosQik4QQSkQwyG/6b2e928bf4be0740d381db1622f8c764/step0.png?w=600&h=77&q=100 1.5x"}}},{__typename:"ContentfulBlogPostCopy",id:"c7jYHOjlsCQeyeAGmMCuUSw",copy:{childMarkdownRemark:{html:'<h4>Step 1</h4>\n<p>Using <a href="https://github.com/yeoman/generator-chrome-extension">this</a> GitHub repo and the Docs provided there we generate chrome extension package. Here is shortly what we do:</p>\n<div class="gatsby-highlight" data-language="bash">\n      <pre class="language-bash"><code class="language-bash"><span class="token comment"># Please make sure that `yo`, `gulp` and `bower` was installed on your system using this command:</span>\n<span class="token function">npm</span> <span class="token function">install</span> --global yo gulp bower\n\n<span class="token comment"># Install the generator:</span>\n<span class="token function">npm</span> <span class="token function">install</span> -g generator-chrome-extension\n\n<span class="token comment"># Make a new directory, and `cd` get into it:</span>\n<span class="token function">mkdir</span> image-tinter <span class="token operator">&amp;&amp;</span> <span class="token function">cd</span> <span class="token variable">$_</span>\n\n<span class="token comment"># Generate a new project</span>\nyo chrome-extension\n\n<span class="token comment"># Transform updated source written by ES2015 (default option)</span>\ngulp babel\n<span class="token comment"># or Using watch to update source continuously</span>\ngulp <span class="token function">watch</span>\n\n<span class="token comment"># Make a production version extension</span>\ngulp build</code></pre>\n      </div>\n<p>Note that, when generating chrome-extension with yeoman, we need to choose Browser Action, as we modify browser content</p>\n<h4>Step 2</h4>\n<p><em>After Step 1</em>, we will have proper project structure generated by Yeoman. The main project is in app directory of project. The main file is manifest.json. We will add these lines inside:</p>\n<div class="gatsby-highlight" data-language="javascript">\n      <pre class="language-javascript"><code class="language-javascript"><span class="token string">"permissions"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>\n  <span class="token string">"activeTab"</span>\n<span class="token punctuation">]</span></code></pre>\n      </div>\n<p>This permission gives us access to active tab in the browser. We don’t need to modify other lines, since they are generated by yeoman.</p>\n<h4>Step 3</h4>\n<p>Creating the view for our extension. Here we work with the file <em>popup.html</em>, where the view of our extension is handled. This popup is shown when we click the icon of the extension. Since we are creating <em>Image Tinter</em>, we need simple form for preferences. We adjust width and height of images to <em>tint</em>, and the <em>opacity</em> we want it to be. And add the <em>button</em> to let the process start. Here is the main body of <em>popup.html</em>:</p>\n<div class="gatsby-highlight" data-language="html">\n      <pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">min-width</span><span class="token punctuation">:</span>250px</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">text-align</span><span class="token punctuation">:</span>center</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Settings<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>fieldset</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Width<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Width<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>40<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>fieldset</span><span class="token punctuation">></span></span>    \n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>fieldset</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>height<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Height<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>height<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Height<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>40<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>fieldset</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>fieldset</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>opacity<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Opacity<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>opacity<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Opacity<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>fieldset</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">width</span><span class="token punctuation">:</span>100%<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn btn-primary<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tint<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Tint<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>scripts/popup.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></code></pre>\n      </div>\n<p><em>Optional:</em> I added bootstrap.css to somehow enhance the view.</p>\n<h4>Step 3</h4>\n<p>Here comes the main logic. We modify the content of <em>scripts/popup.js</em>. This one is called every single time we open our click our extension. The logic is simple: when user clicks the button, all images those match our preferences are tinted. Steps:</p>\n<ol>\n<li>Add Click listener to button</li>\n<li>When click is caught, get parameters of width, height and opacity</li>\n<li>Execute JavaScript code that will tint images.</li>\n</ol>\n<p>Here it is:</p>\n<div class="gatsby-highlight" data-language="javascript">\n      <pre class="language-javascript"><code class="language-javascript"><span class="gatsby-highlight-code-line">document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">\'tint\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">\'click\'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n</span>  <span class="token keyword">var</span> width <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">\'width\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span>\n<span class="gatsby-highlight-code-line">  <span class="token keyword">var</span> height <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">\'height\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span>\n</span><span class="gatsby-highlight-code-line">  <span class="token keyword">var</span> opacity <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">\'opacity\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span>\n</span>\n  <span class="token keyword">var</span> execCode <span class="token operator">=</span> <span class="token string">\' \\\n    var imgs = document.getElementsByTagName("img"); \\\n    for (var i = 0; i &lt; imgs.length; i++) { \\\n        if (imgs[i].height > \'</span><span class="token operator">+</span> height <span class="token operator">+</span><span class="token string">\' &amp;&amp; \\\n            imgs[i].width > \'</span><span class="token operator">+</span> width <span class="token operator">+</span><span class="token string">\') { \\\n              imgs[i].setAttribute("style", "opacity: \'</span> <span class="token operator">+</span> opacity <span class="token operator">/</span> <span class="token number">100</span> <span class="token operator">+</span><span class="token string">\'"); \\\n        } \\\n    }\'</span><span class="token punctuation">;</span>\n\n chrome<span class="token punctuation">.</span>tabs<span class="token punctuation">.</span><span class="token function">executeScript</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n   code<span class="token punctuation">:</span> execCode\n <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n      </div>\n<p><em>Note that</em> we execute Script separately - this is how code is executed through our extension.</p>\n<h4>Step 4</h4>\n<p>Enjoy the result. That’s it!</p>'}}},{__typename:"ContentfulBlogPostImage",id:"aXma90LD3yQyss80gMeok",caption:'The result of our work - "tinter" chrome extension',image:{resolutions:{src:"//images.ctfassets.net/w1fxlmsi3y1l/xfue1u14tMioW2IOScMcu/b29776e734356dc6e43799bbf65a96e2/imgtinter.png?w=400&q=100",srcSet:"//images.ctfassets.net/w1fxlmsi3y1l/xfue1u14tMioW2IOScMcu/b29776e734356dc6e43799bbf65a96e2/imgtinter.png?w=400&h=209&q=100 1x,\n//images.ctfassets.net/w1fxlmsi3y1l/xfue1u14tMioW2IOScMcu/b29776e734356dc6e43799bbf65a96e2/imgtinter.png?w=600&h=314&q=100 1.5x,\n//images.ctfassets.net/w1fxlmsi3y1l/xfue1u14tMioW2IOScMcu/b29776e734356dc6e43799bbf65a96e2/imgtinter.png?w=800&h=418&q=100 2x,\n//images.ctfassets.net/w1fxlmsi3y1l/xfue1u14tMioW2IOScMcu/b29776e734356dc6e43799bbf65a96e2/imgtinter.png?w=1200&h=628&q=100 3x"}}},{__typename:"ContentfulBlogPostCopy",id:"c5mUDHzQg0MQQkyAmYaIsYs",copy:{childMarkdownRemark:{html:'<p>You can see the whole code in <a href="https://github.com/aibolik/img-tinter-chrome-extension">my GitHub repo.</a></p>'}}}]}},pathContext:{slug:"how-to-create-chrome-extension-in-5-minutes"}}}});
//# sourceMappingURL=path---blog-how-to-create-chrome-extension-in-5-minutes-a46da352174a8ff1114f.js.map