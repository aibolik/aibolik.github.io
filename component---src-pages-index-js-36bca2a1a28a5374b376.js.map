{"version":3,"sources":["webpack:///./src/components/BlogPreview/index.js","webpack:///./src/pages/index.js"],"names":["BlogContainer","styled","article","withConfig","displayName","componentId","Title","h2","BlogPreview","_ref","title","content","slug","publishDate","react_default","a","createElement","filter","_ref2","__typename","copy","childMarkdownRemark","excerpt","PublishDate","__webpack_require__","d","__webpack_exports__","pageQuery","PostsContainer","section","Link","GatsbyLink","IndexPage","data","layout","Hero","heroImage","HeroImage","allContentfulBlogPost","edges","map","node","to","key","id","components_BlogPreview"],"mappings":"gJAIMA,EAAgBC,UAAOC,QAAVC,WAAA,CAAAC,YAAA,6BAAAC,YAAA,YAAGJ,CAAH,sBAIbK,EAAQL,UAAOM,GAAVJ,WAAA,CAAAC,YAAA,qBAAAC,YAAA,YAAGJ,CAAH,sCAeIO,EAVK,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,MAAaC,GAAhBF,EAAUG,KAAVH,EAAgBE,SAASE,EAAzBJ,EAAyBI,YAAzB,OAClBC,EAAAC,EAAAC,cAAChB,EAAD,KACEc,EAAAC,EAAAC,cAACV,EAAD,KAAQI,GACRI,EAAAC,EAAAC,cAAA,SACGL,EAAQM,OAAO,SAAAC,GAAA,MAAmC,2BAAnCA,EAAGC,aAA0D,GAAGC,KAAKC,oBAAoBC,SAE3GR,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAaV,YAAaA,0CCnB9BW,EAAAC,EAAAC,EAAA,8BAAAC,IAQA,IAAMC,EAAiB3B,UAAO4B,QAAV1B,WAAA,CAAAC,YAAA,wBAAAC,YAAA,gBAAGJ,CAAH,6BAId6B,EAAO7B,kBAAO8B,QAAV5B,WAAA,CAAAC,YAAA,cAAAC,YAAA,gBAAGJ,CAAH,yCA2BG0B,GAFEK,UApBG,SAAAvB,GAAA,IAAGwB,EAAHxB,EAAGwB,KAAH,OAChBnB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,KACEpB,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CACEC,UAAWC,IACX3B,MAAO,aACPY,QAAS,sMAEXR,EAAAC,EAAAC,cAACY,EAAD,KAEIK,EAAKK,sBAAsBC,MAAMC,IAAI,SAAAtB,GAAA,IAAGuB,EAAHvB,EAAGuB,KAAH,OACnC3B,EAAAC,EAAAC,cAACc,EAAD,CAAMY,GAAE,SAAWD,EAAK7B,KAAQ+B,IAAKF,EAAKG,IAAI9B,EAAAC,EAAAC,cAAC6B,EAAgBJ,UAWrD","file":"component---src-pages-index-js-36bca2a1a28a5374b376.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport PublishDate from '../PublishDate'\n\nconst BlogContainer = styled.article`\n  line-height: 1.5;\n`\n\nconst Title = styled.h2`\n  font-size: 1.8em;\n  line-height: 1.2;\n`\n\nconst BlogPreview = ({ title, slug, content, publishDate }) => (\n  <BlogContainer>\n    <Title>{title}</Title>\n    <p>\n      {content.filter(({ __typename }) => __typename === 'ContentfulBlogPostCopy')[0].copy.childMarkdownRemark.excerpt}\n    </p>\n    <PublishDate publishDate={publishDate} />\n  </BlogContainer>\n)\n\nexport default BlogPreview","import React from 'react'\nimport { Link as GatsbyLink, graphql } from 'gatsby'\nimport BlogPreview from '../components/BlogPreview'\nimport Hero from '../components/Hero'\nimport HeroImage from '../assets/hero.jpg'\nimport styled from 'styled-components'\nimport Layout from '../components/layout'\n\nconst PostsContainer = styled.section`\n  padding: 16px 16px 46px;\n`\n\nconst Link = styled(GatsbyLink)`\n  color: inherit;\n  text-decoration: none;\n`\n\nconst IndexPage = ({ data }) => (\n  <Layout>\n    <section>\n      <Hero\n        heroImage={HeroImage}\n        title={'Hi, there!'}\n        excerpt={'My name is Aibol, and I am passionate about FrontEnd, JavaScript and especially ReactJS. I write about things those seem interesting to me, so I hope you can get some useful stuff for yourself!'}\n      />\n      <PostsContainer>\n        {\n          data.allContentfulBlogPost.edges.map(({ node }) => (\n            <Link to={`/blog/${node.slug}`} key={node.id}><BlogPreview {...node} /></Link>\n          )\n          )\n        }\n      </PostsContainer>\n    </section>\n  </Layout>\n)\n\nexport default IndexPage\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    allContentfulBlogPost(\n      filter: { node_locale: {eq: \"en-US\"}, hidden:{eq: false}},\n      sort: { fields: [publishDate], order: DESC }\n    ) {\n      edges {\n        node {\n          id\n          title\n          slug\n          publishDate(formatString: \"x\")\n          content {\n            __typename\n            ... on ContentfulBlogPostCopy {\n              copy {\n                childMarkdownRemark {\n                  excerpt(pruneLength: 250)\n                }\n              } \n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}