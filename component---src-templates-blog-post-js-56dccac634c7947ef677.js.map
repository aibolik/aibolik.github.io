{"version":3,"sources":["webpack:///./src/components/ImageEmbed/index.js","webpack:///./src/templates/blog-post.js"],"names":["Figure","styled","figure","withConfig","displayName","componentId","ImageEmbed","_ref","image","caption","react_default","a","createElement","src","resolutions","srcSet","StyledContent","section","media","tablet","_templateObject","desktop","_templateObject2","desktopMedium","_templateObject3","pageQuery","BlogPost","post","data","contentfulBlogPost","layout","Hero","heroImage","HeroImage","title","publishDate","content","map","contentItem","__typename","dangerouslySetInnerHTML","__html","copy","childMarkdownRemark","html","components_ImageEmbed"],"mappings":"yJAGMA,EAASC,UAAOC,OAAVC,WAAA,CAAAC,YAAA,qBAAAC,YAAA,YAAGJ,CAAH,4HAsBGK,EAPI,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,MAAOC,EAAVF,EAAUE,QAAV,OACjBC,EAAAC,EAAAC,cAACZ,EAAD,KACEU,EAAAC,EAAAC,cAAA,OAAKC,IAAKL,EAAMM,YAAYD,IAAKE,OAAQP,EAAMM,YAAYC,SAC1DN,GAAWC,EAAAC,EAAAC,cAAA,kBAAaH,kaCVtB,IAAMO,EAAgBf,UAAOgB,QAAVd,WAAA,CAAAC,YAAA,2BAAAC,YAAA,gBAAGJ,CAAH,4aAuBtBiB,IAAMC,OAvBgBC,KA2BtBF,IAAMG,QA3BgBC,KA+BtBJ,IAAMK,cA/BgBC,MA6EbC,GAFEC,UAtBE,SAAAnB,GAAA,IAA+BoB,EAA/BpB,EAAGqB,KAAQC,mBAAX,OACfnB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,KACEpB,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CACEC,UAAWC,IACXC,MAAOP,EAAKO,MACZC,YAAaR,EAAKQ,cAEpBzB,EAAAC,EAAAC,cAACI,EAAD,KACGW,EAAKS,QAAQC,IAAI,SAAAC,GAChB,OAAOA,EAAYC,YACjB,IAAK,yBACH,OAAO7B,EAAAC,EAAAC,cAAA,OAAK4B,wBAAyB,CAAEC,OAAQH,EAAYI,KAAKC,oBAAoBC,QACtF,IAAK,0BACH,OAAOlC,EAAAC,EAAAC,cAACiC,EAAD,CAAYrC,MAAO8B,EAAY9B,MAAOC,QAAS6B,EAAY7B,iBAU1D","file":"component---src-templates-blog-post-js-56dccac634c7947ef677.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nconst Figure = styled.figure`\n  margin: 16px 0;\n  text-align: center;\n\n  img {\n    width: 100%;\n  }\n\n  figcaption {\n    color: rgba(33, 33, 33, .51);\n    font-size: .8em;\n    font-style: italic;\n  }\n`\n\nconst ImageEmbed = ({ image, caption }) => (\n  <Figure>\n    <img src={image.resolutions.src} srcSet={image.resolutions.srcSet} />\n    {caption && <figcaption>{caption}</figcaption>}\n  </Figure>\n)\n\nexport default ImageEmbed","import React from 'react'\nimport { graphql } from 'gatsby'\nimport Hero from '../components/Hero'\nimport ImageEmbed from '../components/ImageEmbed'\nimport HeroImage from '../assets/hero.jpg'\nimport styled from 'styled-components'\nimport { media } from '../helpers/style-helper'\nimport Layout from '../components/layout'\nimport 'prismjs/themes/prism-tomorrow.css'\n\n// Temporarily\nexport const StyledContent = styled.section`\n  padding: 0 16px 40px;\n\n  font-family: 'Merriweather', Helvetica, Arial, serif;\n  font-size: 1.2em;\n  line-height: 1.4;\n\n  .gatsby-highlight {\n    font-size: .8em;\n  }\n\n  blockquote {\n    margin: 1em 40px 1em 1em;\n    padding-left: 1em;\n    border-left: 4px solid rgba(33, 33, 33, .77);\n    \n    font-style: italic;\n  }\n\n  twitterwidget {\n    margin: 10px auto;\n  }\n\n  ${media.tablet`\n    padding: 0 16px 40px 32px;\n  `}\n\n  ${media.desktop`\n    padding: 0 16px 40px 48px;\n  `}\n\n  ${media.desktopMedium`\n    padding-right: 300px;\n  `}\n\n  ul {\n    list-style: circle outside none;\n  }\n\n  a {\n    color: #765E9C;\n    text-decoration: none;\n\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n\n  strong {\n    font-weight: 600;\n  }\n`\n\nconst BlogPost = ({ data: { contentfulBlogPost: post } }) => (\n  <Layout>\n    <article>\n      <Hero \n        heroImage={HeroImage}\n        title={post.title}\n        publishDate={post.publishDate}\n      />\n      <StyledContent>\n        {post.content.map(contentItem => {\n          switch(contentItem.__typename) {\n            case 'ContentfulBlogPostCopy':\n              return <div dangerouslySetInnerHTML={{ __html: contentItem.copy.childMarkdownRemark.html }} />\n            case 'ContentfulBlogPostImage':\n              return <ImageEmbed image={contentItem.image} caption={contentItem.caption} />\n          }        \n        })}\n      </StyledContent>\n    </article>\n  </Layout>\n)\n\nexport default BlogPost\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    contentfulBlogPost(slug: { eq: $slug }) {\n      title\n      slug\n      publishDate(formatString: \"x\")\n      content {\n        __typename\n        ... on ContentfulBlogPostCopy {\n          id\n          copy {\n            childMarkdownRemark {\n              html\n            }\n          }\n        }\n        ... on ContentfulBlogPostImage {\n          id\n          caption\n          image {\n            resolutions(quality: 100) {\n              src\n              srcSet\n            }\n          }\n        }\n      }\n    }\n  }\n`"],"sourceRoot":""}